<!DOCTYPE html>
<html>
<head>
    <title>File Upload Progress</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function uploadFile() {
            const fileInput = document.getElementById("fileInput");
            const progressBar = document.getElementById("progressBar");
            const formData = new FormData();
            formData.append("file", fileInput.files[0]);

            $.ajax({
                type: "POST",
                url: "/upload",
                data: formData,
                contentType: false,
                processData: false,
                xhr: function () {
                    const xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (e) {
                        if (e.lengthComputable) {
                            const percentComplete = (e.loaded / e.total) * 100;
                            progressBar.style.width = percentComplete + "%";
                            progressBar.innerHTML = percentComplete.toFixed(2) + "%";
                        }
                    }, false);
                    return xhr;
                },
                success: function (response) {
                    alert(response.message);
                    // Reset the file input and progress bar
                    fileInput.value = "";
                    progressBar.style.width = "0%";
                    progressBar.innerHTML = "0%";
                },
                error: function (error) {
                    alert("Error uploading file: " + error.responseText);
                }
            });
        }
    </script>
</head>
<body>
    <h1>File Upload Progress</h1>
    <input type="file" id="fileInput" />
    <button onclick="uploadFile()">Upload</button>
    <div id="progressBarContainer">
        <div id="progressBar" style="width: 0%;">0%</div>
    </div>
</body>
</html>




import subprocess

def read_first_30_pages(input_pdf):
    """
    Read the text content of the first 30 pages of a PDF file using mutool.

    Parameters:
        input_pdf (str): Path to the input PDF file.

    Returns:
        list: List of text content from the first 30 pages.
    """
    pdf_text = []
    num_pages = min(get_pdf_page_count(input_pdf), 30)

    for page_number in range(1, num_pages + 1):
        # Use mutool to extract text from the current page
        process = subprocess.Popen(['mutool', 'draw', '-F', 'text', '-o', '-', input_pdf, str(page_number)], stdout=subprocess.PIPE)
        text_content, _ = process.communicate()
        pdf_text.append(text_content.decode('utf-8'))

    return pdf_text

def get_pdf_page_count(input_pdf):
    """
    Get the number of pages in the PDF using mutool.

    Parameters:
        input_pdf (str): Path to the input PDF file.

    Returns:
        int: Number of pages in the PDF.
    """
    process = subprocess.Popen(['mutool', 'info', input_pdf], stdout=subprocess.PIPE)
    output, _ = process.communicate()
    lines = output.decode('utf-8').splitlines()
    for line in lines:
        if line.startswith('Pages:'):
            return int(line.split(':', 1)[1].strip())

if __name__ == "__main__":
    input_pdf_file = "path/to/your/input.pdf"

    first_30_pages_text = read_first_30_pages(input_pdf_file)
    print("Text content of the first 30 pages:")
    for page_number, text in enumerate(first_30_pages_text, start=1):
        print(f"Page {page_number}:\n{text}\n")

